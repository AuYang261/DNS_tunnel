cmake_minimum_required(VERSION 3.15)

project(DNS_TUNNEL LANGUAGES "CXX")
set(CMAKE_CXX_STANDARD 20)

if (CMAKE_HOST_APPLE)
	set(MACOS 1)
	message("MacOS Host detected")
elseif(CMAKE_HOST_UNIX)
	set(LINUX 1)
	message("Linux Host detected")
endif ()

aux_source_directory(src DIR_SRCS)
file (GLOB SOURCES CONFIGURE_DEPENDS "src/*.cpp" "include/*.h")
add_executable(${PROJECT_NAME} ${SOURCES})
target_include_directories(${PROJECT_NAME} PRIVATE ${PROJECT_SOURCE_DIR}/include)
find_package(Python3 COMPONENTS Interpreter Development REQUIRED)
target_include_directories(${PROJECT_NAME} PRIVATE ${Python3_INCLUDE_DIRS})

if(MACOS)
	target_link_directories(${PROJECT_NAME} PUBLIC "/usr/local/opt/pcapplusplus/lib")
	target_include_directories(${PROJECT_NAME} PRIVATE "/usr/local/opt/pcapplusplus/include/pcapplusplus")
	target_compile_definitions(${PROJECT_NAME} PRIVATE "_MACOS_")
	find_library(COREFOUNDATION_LIBRARY CoreFoundation)
	find_library(SYSTEMCONFIGURATION_LIBRARY SystemConfiguration)
	message("CoreFoundation: ${COREFOUNDATION_LIBRARY}")
	target_link_libraries(${PROJECT_NAME} PUBLIC ${COREFOUNDATION_LIBRARY} ${SYSTEMCONFIGURATION_LIBRARY})
elseif(LINUX)
	target_link_directories(${PROJECT_NAME} PUBLIC "/usr/local/lib")
	target_include_directories(${PROJECT_NAME} PRIVATE "/usr/local/include/pcapplusplus")
	target_compile_definitions(${PROJECT_NAME} PRIVATE "_LINUX_")
endif ()

target_link_libraries(${PROJECT_NAME} PUBLIC "Packet++" "Pcap++" "Common++" "pcap" "pthread" ${Python3_LIBRARIES})
target_compile_options(${PROJECT_NAME} PUBLIC -DPCAPP_CPP_FEATURE_DETECTION)